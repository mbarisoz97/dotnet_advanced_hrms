// <auto-generated />
using System;
using Ehrms.TrainingManagement.API.Database.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Ehrms.TrainingManagement.API.Migrations
{
    [DbContext(typeof(TrainingDbContext))]
    [Migration("20240724073043_Training_Recommendation_Models")]
    partial class Training_Recommendation_Models
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Ehrms.TrainingManagement.API.Database.Models.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TrainingRecommendationResultId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("TrainingRecommendationResultId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Ehrms.TrainingManagement.API.Database.Models.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("Ehrms.TrainingManagement.API.Database.Models.Skill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SkillName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("Skill");
                });

            modelBuilder.Entity("Ehrms.TrainingManagement.API.Database.Models.Training", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PlannedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Trainings");
                });

            modelBuilder.Entity("Ehrms.TrainingManagement.API.Database.Models.TrainingRecommendationRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("RequestStatus")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("RecommendationRequests");
                });

            modelBuilder.Entity("Ehrms.TrainingManagement.API.Database.Models.TrainingRecommendationResult", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("RecommendationRequestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SkillId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RecommendationRequestId");

                    b.HasIndex("SkillId");

                    b.ToTable("RecommendationResults");
                });

            modelBuilder.Entity("EmployeeSkill", b =>
                {
                    b.Property<Guid>("EmployeesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SkillsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("EmployeesId", "SkillsId");

                    b.HasIndex("SkillsId");

                    b.ToTable("EmployeeSkill");
                });

            modelBuilder.Entity("EmployeeTraining", b =>
                {
                    b.Property<Guid>("ParticipantsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TrainingsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ParticipantsId", "TrainingsId");

                    b.HasIndex("TrainingsId");

                    b.ToTable("EmployeeTraining");
                });

            modelBuilder.Entity("Ehrms.TrainingManagement.API.Database.Models.Employee", b =>
                {
                    b.HasOne("Ehrms.TrainingManagement.API.Database.Models.Project", null)
                        .WithMany("Employees")
                        .HasForeignKey("ProjectId");

                    b.HasOne("Ehrms.TrainingManagement.API.Database.Models.TrainingRecommendationResult", null)
                        .WithMany("Employees")
                        .HasForeignKey("TrainingRecommendationResultId");
                });

            modelBuilder.Entity("Ehrms.TrainingManagement.API.Database.Models.Skill", b =>
                {
                    b.HasOne("Ehrms.TrainingManagement.API.Database.Models.Project", null)
                        .WithMany("RequiredSkills")
                        .HasForeignKey("ProjectId");
                });

            modelBuilder.Entity("Ehrms.TrainingManagement.API.Database.Models.TrainingRecommendationRequest", b =>
                {
                    b.HasOne("Ehrms.TrainingManagement.API.Database.Models.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Ehrms.TrainingManagement.API.Database.Models.TrainingRecommendationResult", b =>
                {
                    b.HasOne("Ehrms.TrainingManagement.API.Database.Models.TrainingRecommendationRequest", "RecommendationRequest")
                        .WithMany("TrainingRecommendation")
                        .HasForeignKey("RecommendationRequestId");

                    b.HasOne("Ehrms.TrainingManagement.API.Database.Models.Skill", "Skill")
                        .WithMany()
                        .HasForeignKey("SkillId");

                    b.Navigation("RecommendationRequest");

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("EmployeeSkill", b =>
                {
                    b.HasOne("Ehrms.TrainingManagement.API.Database.Models.Employee", null)
                        .WithMany()
                        .HasForeignKey("EmployeesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ehrms.TrainingManagement.API.Database.Models.Skill", null)
                        .WithMany()
                        .HasForeignKey("SkillsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EmployeeTraining", b =>
                {
                    b.HasOne("Ehrms.TrainingManagement.API.Database.Models.Employee", null)
                        .WithMany()
                        .HasForeignKey("ParticipantsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ehrms.TrainingManagement.API.Database.Models.Training", null)
                        .WithMany()
                        .HasForeignKey("TrainingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Ehrms.TrainingManagement.API.Database.Models.Project", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("RequiredSkills");
                });

            modelBuilder.Entity("Ehrms.TrainingManagement.API.Database.Models.TrainingRecommendationRequest", b =>
                {
                    b.Navigation("TrainingRecommendation");
                });

            modelBuilder.Entity("Ehrms.TrainingManagement.API.Database.Models.TrainingRecommendationResult", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
