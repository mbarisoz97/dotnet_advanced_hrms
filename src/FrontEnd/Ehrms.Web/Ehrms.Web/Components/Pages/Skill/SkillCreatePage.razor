@attribute [Authorize]

@inject IToastService ToastService
@inject ISkillServiceClient SkillServiceClient
@inject NavigationManager NavigationManager

<MudDialog>
    <DialogContent>
        <SkillForm IsEditMode="false" OnValidSubmit="CreateSkill" />
    </DialogContent>
</MudDialog>

@code {
    [CascadingParameter]
    private MudDialogInstance? MudDialog { get; set; } = default!;

    private async Task CreateSkill(SkillModel skill)
    {
        var response = await SkillServiceClient.CreateSkillAsync(skill);
        if (response.StatusCode == HttpStatusCode.OK)
        {
            ToastService.ShowSuccess($"New skill created successfully");
            MudDialog?.Close();
            return;
        }

        if (response.StatusCode == HttpStatusCode.Conflict)
        {
            ToastService.ShowError($"A record with this name has already been created");
        }
    }
}