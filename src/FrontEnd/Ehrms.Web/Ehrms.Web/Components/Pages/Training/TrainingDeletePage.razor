@attribute [Authorize]
@attribute [StreamRendering]

@inject IToastService ToastService
@inject ITrainingServiceClient TrainingServiceClient

<MudDialog>
    <DialogContent>
        @if (Training == null)
        {
            <Loading></Loading>
        }
        else
        {
            <div class="form-group">
                <table class="table">
                    <tbody>
                        <tr>
                            <td>Training</td>
                            <td>@Training.Name</td>
                        </tr>
                        <tr>
                            <td>Date</td>
                            <td>@Training.PlannedAt</td>
                        </tr>
                    </tbody>
                </table>
            </div>
            <div class="form-group">
                <button @onclick="Remove" class="btn btn-danger">Delete</button>
                <button @onclick="Cancel" class="btn btn-warning">Cancel</button>
            </div>
        }
    </DialogContent>
</MudDialog>

@code {
    [Parameter]
    public Guid Id { get; set; }

    [CascadingParameter]
    private MudDialogInstance? MudDialog { get; set; }

    private TrainingModel? Training { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var response = await TrainingServiceClient.GetTrainingAsync(Id);
        if (response.StatusCode == HttpStatusCode.OK)
        {
            Training = response.Content;
        }
        else
        {
            ToastService.ShowError($"Could not load training data. Service returned  {response.StatusCode}");
        }
    }

    protected async Task Remove()
    {
        var response = await TrainingServiceClient.DeleteTrainingAsync(Id);
        if (response.StatusCode == HttpStatusCode.NoContent)
        {
            ToastService.ShowSuccess("Training deleted successfully.");
            MudDialog?.Close();
        }
        else
        {
            ToastService.ShowError($"Service returned : {response.StatusCode}");
        }
    }

    protected void Cancel()
    {
        MudDialog?.Close(DialogResult.Cancel);
    }
}