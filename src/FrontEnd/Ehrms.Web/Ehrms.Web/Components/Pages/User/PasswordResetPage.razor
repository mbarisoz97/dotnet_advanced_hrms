@layout EmptyLayout
@attribute [Route($"{UserRouting.PasswordReset}")]

@inject IToastService ToastService
@inject NavigationManager NavigationManager
@inject IAccountServiceClient AccountServiceClient

<div class="container">
    <div class="row vh-100 align-items-center justify-content-center">
        <EditForm Model="@PasswordResetModel" OnValidSubmit="ValidSubmit">
            <DataAnnotationsValidator/>
            <MudCard>
                <MudCardHeader Class="align-items-center">
                    <MudText Typo="Typo.h6">
                        Reset Your Password
                    </MudText>
                </MudCardHeader>
                <MudCardContent>
                    <MudTextField
                        Label="Username"
                        @bind-Value="@PasswordResetModel.Username"
                        For="@(() => PasswordResetModel.Username)"
                        Variant="Variant.Outlined"
                        Clearable="true"
                        Adornment="Adornment.End"
                        AdornmentIcon="@Icons.Material.Filled.Person"/>
                    <MudTextField
                        Class="mt-3"
                        InputType="InputType.Password"
                        Label="Current Password"
                        Variant="Variant.Outlined"
                        Clearable="true"
                        Adornment="Adornment.End"
                        AdornmentIcon="@Icons.Material.Filled.Lock"
                        @bind-Value="PasswordResetModel.CurrentPassword"
                        For="@(() => PasswordResetModel.CurrentPassword)"/>
                    <MudTextField
                        Class="mt-3"
                        InputType="InputType.Password"
                        Label="New Password"
                        Clearable="true"
                        Variant="Variant.Outlined"
                        Adornment="Adornment.End"
                        AdornmentIcon="@Icons.Material.Filled.LockReset"
                        @bind-Value="PasswordResetModel.NewPassword"
                        For="@(() => PasswordResetModel.NewPassword)"/>
                    <MudTextField
                        Label="Repeat New Password"
                        Class="mt-3"
                        Clearable="true"
                        Adornment="Adornment.End"
                        Variant="Variant.Outlined"
                        AdornmentIcon="@Icons.Material.Filled.SyncLock"
                        @bind-Value="PasswordResetModel.NewPasswordConfirmation"
                        For="@(() => PasswordResetModel.NewPasswordConfirmation)"
                        InputType="InputType.Password"/>
                </MudCardContent>
                <MudCardActions>
                    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" StartIcon="@Icons.Material.Filled.Save" Class="ml-auto">Save</MudButton>
                </MudCardActions>
            </MudCard>
        </EditForm>
    </div>
</div>

@code {
    [SupplyParameterFromForm] public PasswordResetModel PasswordResetModel { get; set; } = new();

    private async Task ValidSubmit()
    {
        var response = await AccountServiceClient.ResetPassword(PasswordResetModel);
        if (response.StatusCode == HttpStatusCode.OK)
        {
            NavigationManager.NavigateTo(UserRouting.Login, forceLoad: true);
        }
        else
        {
            ToastService.ShowError($"Service returned {response.StatusCode}");
        }
    }
}