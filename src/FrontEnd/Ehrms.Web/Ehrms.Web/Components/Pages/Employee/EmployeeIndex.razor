@page "/Employee"
@attribute [StreamRendering]
@rendermode InteractiveServer

@inject IEmployeeInfoServiceClient EmployeeServiceServiceClient

@if (_employees == null)
{
	return;
}

<div class="row">
	<div class="d-flex flex-row justify-content-between">
		<SearchBar SearchBarPlaceHolder="Search Employee" />
		<a href="/Employee/Create" class="btn btn-success">
			<i class="bi bi-person-plus"></i>
		</a>
	</div>
</div>

<div class="row">
	<div class="table-responsive-lg">
		<table class="table table-hover table-borderless">
			<thead>
				<tr>
					<th>#</th>
					<th>First Name</th>
					<th>Last Name</th>
					<th>Date Of Birth</th>
					<th>Qualification</th>
				</tr>
			</thead>
			<tbody>
				@foreach (var employee in _employees)
				{
					<tr>
						<td></td>
						<td>@employee.FirstName</td>
						<td>@employee.LastName</td>
						<td>@employee.DateOfBirth</td>
						<td>@employee.Qualification</td>
					</tr>
				}
			</tbody>
		</table>
	</div>
</div>

@code {
	private IEnumerable<Employee> _employees { get; set; } = [];
	private int CurrentPage { get; set; } = 1;

	protected override async Task OnInitializedAsync()
	{
		_employees = await EmployeeServiceServiceClient.GetEmployees(CurrentPage);
	}
}