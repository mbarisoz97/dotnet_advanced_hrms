@attribute [StreamRendering]

@if (EmployeeRegistration == null)
{
	return;
}

<EditForm Model="@EmployeeRegistration" OnValidSubmit="ValidSubmit" FormName="EmployeeForm">
	<DataAnnotationsValidator></DataAnnotationsValidator>
	<div class="mt-3">
		<label class="form-label">First Name</label>
		<InputText class="form-control" @bind-Value="@EmployeeRegistration.FirstName"></InputText>
		<ValidationMessage class="text-danger" For="(()=> EmployeeRegistration.FirstName)"></ValidationMessage>
	</div>
	<div class="mt-3">
		<label class="form-label">Last Name</label>
		<InputText class="form-control" @bind-Value="@EmployeeRegistration.LastName"></InputText>
		<ValidationMessage class="text-danger" For="(()=> EmployeeRegistration.LastName)"></ValidationMessage>
	</div>
	<div>
		<label class="form-label">Date of Birth</label>
		<InputDate class="form-control" @bind-Value="@EmployeeRegistration.DateOfBirth"></InputDate>
		<ValidationMessage class="text-danger" For="(()=> EmployeeRegistration.DateOfBirth)"></ValidationMessage>
	</div>
	<div class="mt-3">
		<label class="form-label">Position</label>
		<InputText class="form-control" @bind-Value="@EmployeeRegistration.Qualification"></InputText>
		<ValidationMessage class="text-danger" For="(()=> EmployeeRegistration.Qualification)"></ValidationMessage>
	</div>
	<div class="mt-3">
		<button class="btn btn-primary" type="submit">
			<i class="bi bi-floppy"></i> Save
		</button>
	</div>
</EditForm>

@code {
	[Parameter]
	public bool IsEditMode { get; set; }

	[Parameter]
	public Guid EmployeeId { get; set; }

	[SupplyParameterFromForm]
	public Employee? EmployeeRegistration { get; set; }

	[Parameter]
	public EventCallback<Employee> OnValidSubmit { get; set; }

	protected override async Task OnInitializedAsync()
	{
		EmployeeRegistration ??= new();
	}

	protected async Task ValidSubmit()
	{
		await OnValidSubmit.InvokeAsync(EmployeeRegistration);
	}
}