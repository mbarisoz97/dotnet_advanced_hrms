@attribute [Route($"{ProjectRouting.History}/{{id:guid}}")]
@attribute [Authorize]
@attribute [StreamRendering]

@using ApexCharts

@inject IToastService ToastService
@inject IProjectServiceClient ProjectServiceClient

@if (EmploymentRecords == null)
{
	<div class="text-center text-muted" style="min-height:300px">
		<h3>Loading chart<span class="animated-dots"></span></h3>
	</div>
}
else
{
	<MudStack Spacing="2">
		<MudButton OnClick="OnExpandCollapseClick">Project Employment Timeline</MudButton>
		<MudDivider />
		<MudCollapse Expanded="_expanded">
			<ApexChart TItem="ProjectEmploymentModel"
					   Options=options
					   XAxisType="XAxisType.Datetime">
				<ApexRangeSeries TItem="ProjectEmploymentModel"
								 Items="EmploymentRecords"
								 XValue="@(e => e.EmployeeName)"
								 YMinValue="@(e =>e.StartedAt.ToDateTime(TimeOnly.MinValue).ToUnixTimeMilliseconds())"
								 YMaxValue="@(e => e.EndedAt != null
												? ((DateOnly)e.EndedAt!).ToDateTime(TimeOnly.MinValue).ToUnixTimeMilliseconds()
												: DateTime.Now.ToUnixTimeMilliseconds())" />
			</ApexChart>
		</MudCollapse>
	</MudStack>
}

@code {
	[Parameter]
	public Guid Id { get; set; }

	private IEnumerable<ProjectEmploymentModel>? EmploymentRecords { get; set; }

	private bool Loading { get; set; }
	private string SearchString { get; set; } = "";

	private ApexChartOptions<ProjectEmploymentModel>? options;

	private bool _expanded = false;

	private void OnExpandCollapseClick()
	{
		_expanded = !_expanded;
	}

	protected override async Task OnInitializedAsync()
	{
		var response = await ProjectServiceClient.GetProjectHistoryAsync(Id);
		if (response.StatusCode == HttpStatusCode.OK)
		{
			EmploymentRecords = response.Content;
		}
		else
		{
			ToastService.ShowError($"Could not read project history. Service returned {response.StatusCode}");
		}

		options = new ApexChartOptions<ProjectEmploymentModel>
			{
				PlotOptions = new PlotOptions
				{
					Bar = new PlotOptionsBar
					{
						Horizontal = true
					}
				},
				Tooltip = new ApexCharts.Tooltip
				{
					X = new TooltipX
					{
						Format = "dd MMM yyyy HH:mm"
					}
				}
			};
	}
}